package com.neueda.jetbrains.plugin.graphdb.test.integration.neo4j.tests.cypher.documentation;

import com.neueda.jetbrains.plugin.graphdb.language.cypher.completion.metadata.CypherMetadataContainer;
import com.neueda.jetbrains.plugin.graphdb.test.integration.neo4j.tests.cypher.util.BaseDocumentationTest;

import static org.assertj.core.api.Assertions.assertThat;

public class AutoGeneratedUserFunctionDocumentationTest extends BaseDocumentationTest {

    private CypherMetadataContainer metadata;

    @Override
    public void setUp() throws Exception {
        super.setUp();
        metadata = services().cypherMetadataProvider().getContainer("documentationTest");
    }

    public void testExistingUserFunctionDocumentationWithoutDescription() throws Exception {
        metadata.addUserFunction("test.userFunctionName", "(functionSignature)", null);
        configure("RETURN test.user<caret>FunctionName(42);");
        assertThat(verify())
                .contains("function")
                .contains("test.userFunctionName")
                .contains("Arguments")
                .contains("(functionSignature)")
                .contains("Return")
                .contains("ANY");
    }

    public void testExistingUserFunctionDocumentationWithDescription() throws Exception {
        metadata.addUserFunction("test.userFunctionName", "(functionSignature)", "My cool description");
        configure("RETURN test.user<caret>FunctionName(42);");
        assertThat(verify())
                .contains("function")
                .contains("test.userFunctionName")
                .contains("Arguments")
                .contains("(functionSignature)")
                .contains("Return")
                .contains("ANY")
                .contains("My cool description");
    }

    public void testNonExistingUserFunctionNoDocumentation() throws Exception {
        configure("RETURN test.user<caret>FunctionName(42);");
        verify(null);
    }
}
