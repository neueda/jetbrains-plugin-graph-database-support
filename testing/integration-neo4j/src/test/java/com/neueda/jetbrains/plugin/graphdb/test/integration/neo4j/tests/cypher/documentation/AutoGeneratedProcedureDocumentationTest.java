package com.neueda.jetbrains.plugin.graphdb.test.integration.neo4j.tests.cypher.documentation;

import com.neueda.jetbrains.plugin.graphdb.language.cypher.completion.metadata.CypherMetadataContainer;
import com.neueda.jetbrains.plugin.graphdb.test.integration.neo4j.tests.cypher.util.BaseDocumentationTest;

import static org.assertj.core.api.Assertions.assertThat;

public class AutoGeneratedProcedureDocumentationTest extends BaseDocumentationTest {

    private CypherMetadataContainer metadata;

    @Override
    public void setUp() throws Exception {
        super.setUp();
        metadata = services().cypherMetadataProvider().getContainer("documentationTest");
    }

    public void testExistingProcedureDocumentationWithoutDescription() throws Exception {
        metadata.addProcedure("test.procedureName", "(signature)", null);
        configure("CALL test.proce<caret>dureName(42);");
        assertThat(verify())
                .contains("procedure")
                .contains("test.procedureName")
                .contains("Arguments")
                .contains("(signature)")
                .contains("Return")
                .contains("ANY");
    }

    public void testExistingProcedureDocumentationWithDescription() throws Exception {
        metadata.addProcedure("test.procedureName", "(signature)", "My cool description");
        configure("CALL test.proce<caret>dureName(42);");
        assertThat(verify())
                .contains("procedure")
                .contains("test.procedureName")
                .contains("Arguments")
                .contains("(signature)")
                .contains("Return")
                .contains("ANY")
                .contains("My cool description");
    }

    public void testNonExistingProcedureNoDocumentation() throws Exception {
        configure("CALL test.proce<caret>dureName(42);");
        verify(null);
    }
}
